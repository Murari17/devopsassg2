apiVersion: v1
kind: Namespace
metadata:
  name: devopsasg1
  labels:
    name: devopsasg1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: devopsasg1-app
  namespace: devopsasg1
  labels:
    app: devopsasg1-app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: devopsasg1-app
  template:
    metadata:
      labels:
        app: devopsasg1-app
    spec:
      containers:
      - name: app
        image: nginx:alpine
        ports:
        - containerPort: 80
        env:
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: password
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: devopsasg1-app
  namespace: devopsasg1
spec:
  selector:
    app: devopsasg1-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: devopsasg1-network-policy
  namespace: devopsasg1
spec:
  podSelector:
    matchLabels:
      app: devopsasg1-app
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 80
  egress:
  - {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: devopsasg1
data:
  app.properties: |
    app.name=DevSecOps Demo
    app.version=1.0.0
    app.environment=production
